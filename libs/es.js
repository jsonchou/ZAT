import _objectSpread from"@babel/runtime/helpers/objectSpread";import _classCallCheck from"@babel/runtime/helpers/classCallCheck";import _createClass from"@babel/runtime/helpers/createClass";var ZAT=function(){function t(o){var e=this;_classCallCheck(this,t),this.$options=o,this.$proxyTable=_objectSpread({},this,this.$options.methods,this.$options.data),this.init(function(){e.doMethods(),e.doMounted(),e.doComputed(),e.doWatch()})}return _createClass(t,[{key:"init",value:function(t){var o="body";this.$options.el&&(o=document.querySelector(this.$options.el)),Object.assign(this.$proxyTable,{$el:o}),t&&t()}},{key:"doMethods",value:function(){var t=this;Object.keys(this.$options.methods).forEach(function(o){t.$options.methods[o].call(t.$proxyTable)})}},{key:"doMounted",value:function(){this.$options.mounted.call(this.$proxyTable)}},{key:"doComputed",value:function(){var t=this;Object.keys(this.$options.computed).forEach(function(o){t.$options.computed[o].call(t.$proxyTable)})}},{key:"doWatch",value:function(){var t=this;Object.keys(this.$options.watch).forEach(function(o){t.$options.watch[o].call(t.$proxyTable)})}}]),t}(),app=new ZAT({el:"#app",data:{cfg:{width:300,height:300,folder_name:"acccurate-temp"},list:[]},computed:{listExt:function(){console.log("computed listExt",this)},cfgExt:function(){console.log("computed cfgExt",this)}},watch:{list:function(t,o){console.log("watch list",this)},cfg:function(t,o){console.log("watch cfg",this)}},methods:{funcA:function(){console.log("funcA",this)},funcB:function(){console.log("funcB",this)}},mounted:function(){console.log("mounted",this)}});
